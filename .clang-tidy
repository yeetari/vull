---
Checks: >
  abseil-duration-addition,
  abseil-duration-comparison,
  abseil-duration-conversion-cast,
  abseil-duration-division,
  abseil-duration-factory-float,
  abseil-duration-factory-scale,
  abseil-duration-subtraction,
  abseil-duration-unnecessary-conversion,
  abseil-faster-strsplit-delimiter,
  abseil-no-internal-dependencies,
  abseil-no-namespace,
  abseil-redundant-strcat-calls,
  abseil-str-cat-append,
  abseil-string-find-startswith,
  abseil-string-find-str-contains,
  abseil-time-comparison,
  abseil-time-subtraction,
  abseil-upgrade-duration-conversions,
  bugprone-argument-comment,
  bugprone-assert-side-effect,
  bugprone-bad-signal-to-kill-thread,
  bugprone-bool-pointer-implicit-conversion,
  bugprone-branch-clone,
  bugprone-copy-constructor-init,
  bugprone-dangling-handle,
  bugprone-dynamic-static-initializers,
  bugprone-exception-escape,
  bugprone-fold-init-type,
  bugprone-forward-declaration-namespace,
  bugprone-forwarding-reference-overload,
  bugprone-inaccurate-erase,
  bugprone-incorrect-roundings,
  bugprone-infinite-loop,
  bugprone-integer-division,
  bugprone-lambda-function-name,
  bugprone-macro-parentheses,
  bugprone-macro-repeated-side-effects,
  bugprone-misplaced-operator-in-strlen-in-alloc,
  bugprone-misplaced-pointer-arithmetic-in-alloc,
  bugprone-misplaced-widening-cast,
  bugprone-move-forwarding-reference,
  bugprone-multiple-statement-macro,
  bugprone-narrowing-conversions,
  bugprone-no-escape,
  bugprone-not-null-terminated-result,
  bugprone-parent-virtual-call,
  bugprone-posix-return,
  bugprone-redundant-branch-condition,
  bugprone-reserved-identifier,
  bugprone-signal-handler,
  bugprone-signed-char-misuse,
  bugprone-sizeof-container,
  bugprone-spuriously-wake-up-functions,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-suspicious-enum-usage,
  bugprone-suspicious-include,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-missing-comma,
  bugprone-suspicious-semicolon,
  bugprone-suspicious-string-compare,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  bugprone-too-small-loop-variable,
  bugprone-undefined-memory-manipulation,
  bugprone-undelegated-constructor,
  bugprone-unhandled-self-assignment,
  bugprone-unused-raii,
  bugprone-unused-return-value,
  bugprone-use-after-move,
  bugprone-virtual-near-miss,
  cppcoreguidelines-avoid-c-arrays,
  cppcoreguidelines-avoid-goto,
  cppcoreguidelines-avoid-non-const-global-variables,
  cppcoreguidelines-c-copy-assignment-signature,
  cppcoreguidelines-explicit-virtual-functions,
  cppcoreguidelines-interfaces-global-init,
  cppcoreguidelines-narrowing-conversions,
  cppcoreguidelines-pro-type-const-cast,
  cppcoreguidelines-pro-type-cstyle-cast,
  cppcoreguidelines-pro-type-member-init,
  cppcoreguidelines-pro-type-static-cast-downcast,
  cppcoreguidelines-slicing,
  cppcoreguidelines-special-member-functions,
  google-build-explicit-make-pair,
  google-build-namespaces,
  google-build-using-namespace,
  google-default-arguments,
  google-global-names-in-headers,
  google-objc-avoid-nsobject-new,
  google-objc-avoid-throwing-exception,
  google-objc-function-naming,
  google-objc-global-variable-declaration,
  google-readability-avoid-underscore-in-googletest-name,
  google-readability-braces-around-statements,
  google-readability-casting,
  google-readability-function-size,
  google-readability-namespace-comments,
  google-runtime-int,
  google-runtime-operator,
  google-upgrade-googletest-case,
  hicpp-avoid-c-arrays,
  hicpp-avoid-goto,
  hicpp-braces-around-statements,
  hicpp-deprecated-headers,
  hicpp-exception-baseclass,
  hicpp-function-size,
  hicpp-invalid-access-moved,
  hicpp-member-init,
  hicpp-move-const-arg,
  hicpp-multiway-paths-covered,
  hicpp-new-delete-operators,
  hicpp-no-array-decay,
  hicpp-no-assembler,
  hicpp-noexcept-move,
  hicpp-special-member-functions,
  hicpp-static-assert,
  hicpp-undelegated-constructor,
  hicpp-use-auto,
  hicpp-use-emplace,
  hicpp-use-equals-default,
  hicpp-use-equals-delete,
  hicpp-use-noexcept,
  hicpp-use-nullptr,
  hicpp-use-override,
  llvm-else-after-return,
  llvm-include-order,
  llvm-namespace-comment,
  llvm-prefer-isa-or-dyn-cast-in-conditionals,
  llvm-prefer-register-over-unsigned,
  llvm-qualified-auto,
  llvm-twine-local,
  misc-definitions-in-headers,
  misc-new-delete-overloads,
  misc-no-recursion,
  misc-non-copyable-objects,
  misc-redundant-expression,
  misc-static-assert,
  misc-throw-by-value-catch-by-reference,
  misc-unconventional-assign-operator,
  misc-uniqueptr-reset-release,
  misc-unused-alias-decls,
  misc-unused-parameters,
  misc-unused-using-decls,
  modernize-avoid-bind,
  modernize-avoid-c-arrays,
  modernize-concat-nested-namespaces,
  modernize-deprecated-headers,
  modernize-deprecated-ios-base-aliases,
  modernize-loop-convert,
  modernize-make-shared,
  modernize-make-unique,
  modernize-pass-by-value,
  modernize-raw-string-literal,
  modernize-redundant-void-arg,
  modernize-replace-auto-ptr,
  modernize-replace-disallow-copy-and-assign-macro,
  modernize-replace-random-shuffle,
  modernize-return-braced-init-list,
  modernize-shrink-to-fit,
  modernize-unary-static-assert,
  modernize-use-auto,
  modernize-use-bool-literals,
  modernize-use-default-member-init,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-noexcept,
  modernize-use-nullptr,
  modernize-use-override,
  modernize-use-transparent-functors,
  modernize-use-uncaught-exceptions,
  modernize-use-using,
  performance-faster-string-find,
  performance-for-range-copy,
  performance-implicit-conversion-in-loop,
  performance-inefficient-algorithm,
  performance-inefficient-string-concatenation,
  performance-inefficient-vector-operation,
  performance-move-const-arg,
  performance-move-constructor-init,
  performance-no-automatic-move,
  performance-no-int-to-ptr,
  performance-noexcept-move-constructor,
  performance-trivially-destructible,
  performance-type-promotion-in-math-fn,
  performance-unnecessary-copy-initialization,
  performance-unnecessary-value-param,
  portability-restrict-system-includes,
  portability-simd-intrinsics,
  readability-avoid-const-params-in-decls,
  readability-braces-around-statements,
  readability-const-return-type,
  readability-container-size-empty,
  readability-convert-member-functions-to-static,
  readability-delete-null-pointer,
  readability-deleted-default,
  readability-else-after-return,
  readability-function-size,
  readability-identifier-naming,
  readability-implicit-bool-conversion,
  readability-inconsistent-declaration-parameter-name,
  readability-isolate-declaration,
  readability-make-member-function-const,
  readability-misleading-indentation,
  readability-misplaced-array-index,
  readability-non-const-parameter,
  readability-qualified-auto,
  readability-redundant-access-specifiers,
  readability-redundant-control-flow,
  readability-redundant-declaration,
  readability-redundant-function-ptr-dereference,
  readability-redundant-member-init,
  readability-redundant-preprocessor,
  readability-redundant-smartptr-get,
  readability-redundant-string-cstr,
  readability-redundant-string-init,
  readability-simplify-boolean-expr,
  readability-simplify-subscript-expr,
  readability-static-accessed-through-instance,
  readability-static-definition-in-anonymous-namespace,
  readability-string-compare,
  readability-uniqueptr-delete-release,
  readability-uppercase-literal-suffix,
  readability-use-anyofallof,
  zircon-temporary-objects,
FormatStyle: file
CheckOptions:
  - key: bugprone-assert-side-effect.AssertMacros
    value: ASSERT,ASSERT_PEDANTIC
  - key: readability-uppercase-literal-suffix.NewSuffixes
    value: f;u;l;ul;ull
